#!/bin/bash

# blbuild - build the bootloader in deps/a101fw

BLTO=$1

NEWFROM=
NEWTO=

for i in 144 216 256; do
    if [ "$BLTO" == "$i" ]; then
        NEWTO=bl$i
    fi
done

if [ -z "$NEWTO" -o -n "$2" ]; then
    echo "Usage: blbuild NEWSIZE"
    echo "    NEWSIZE is the desired size of the X86 partition; it can be"
    echo "        144, 216, or 256 (units are KB)"
    exit 1
fi

echo blbuild: ZJS Bootloader Builder
echo -------------------------------

function check() {
    echo -n "Checking current $1 ($2) partition size... "
    rm -f /tmp/bl-image.$2
    dfu-util -a $2 -U /tmp/bl-image.$2 > /dev/null
    if [ $? -ne 0 ]; then
        echo Reset the device and try command again a few seconds later!
        exit 1
    fi
    PARTSIZE=$(ls -lh /tmp/bl-image.$2 | cut -d' ' -f5)
    echo $PARTSIZE
}

check X86 x86_app

for i in 144 216 256; do
    if [ "$PARTSIZE" == "${i}K" ]; then
        BLFROM=$i
        NEWFROM=bl$i
    fi
done

if [ -z "$NEWFROM" ]; then
    echo "blbuild: Unsupported current X86 partition size of $PARTSIZE"
    echo "    Expected 144K, 216K, or 256K."
    exit 1
fi

echo blbuild: Changing X86 partition size from ${BLFROM}k to ${BLTO}k.
echo Press Ctrl-C to quit, or any key to continue...
read -n 1 -s

echo
echo WARNING: If you have used JTAG to flash this device before, you may need to
echo "  restore it to factory condition, or your device may become unbootable!"
echo Press Ctrl-C to quit, or any key to continue...
read -n 1 -s

# undefine zephyr vars to do contained bootloader build
ZEPHYR_BASE=
ZEPHYR_GCC_VARIANT=

FWDIR=$ZJS_BASE/deps/a101fw
BUILDDIR=$FWDIR/arduino101_firmware/projects/arduino101
UPDFILE=$FWDIR/out/quark_se_arduino_arduino101_debug/firmware/bootupdater.bin
SAVEUPD=$FWDIR/.oldupdater.bin

# Build the firmware for the current size so we can save its updater
cd $FWDIR
git checkout $NEWFROM
if [ $? -ne 0 ]; then
    echo blbuild: Error checking out git branch $NEWFROM in a101fw
    exit 1
fi
cd -

# FIXME: Find a make command that can build just the boot updater!
echo blbuild: Building Arduino 101 firmware for ${BLFROM}k...
make clean setup image -C $BUILDDIR
if [ $? -ne 0 ]; then
    echo blbuild: Error building firmware for old size
    exit 1
fi

# Save the updater for the old size since it will look in the right place
echo blbuild: Saving the bootupdater that expects a ${BLFROM}k partition.
cp $UPDFILE $SAVEUPD
if [ $? -ne 0 ]; then
    echo blbuild: Error copying file
    exit 1
fi

# Build the firmware for the new size to get the new bootloader
cd $FWDIR
git checkout $NEWTO
if [ $? -ne 0 ]; then
    echo blbuild: Error checking out git branch $NEWTO in a101fw
    exit 1
fi
cd -

echo blbuild: Building Arduino 101 firmware for ${BLTO}k...
make clean setup image -C $BUILDDIR
if [ $? -ne 0 ]; then
    echo blbuild: Error building firmware for new size
    exit 1
fi

echo blbuild: Building Arduino 101 flashpack...
cd $FWDIR/arduino101_flashpack
./create_flasher.sh
if [ $? -ne 0 ]; then
    echo blbuild: Error creating flashpack
    exit 1
fi

# Move the original boot updater to the flashpack
mv $SAVEUPD $FWDIR/arduino101_flashpack/images/firmware/bootupdater.bin
if [ $? -ne 0 ]; then
    echo blbuild: Error restoring bootupdater for old size
    exit 1
fi

echo blbuild: Ready to flash new bootloader with ${BLTO}k X86 partition...
echo If you quit, you can run blflash later to do the flashing.
echo Press Ctrl-C to quit, or any key to continue...
read -n 1 -s

blflash
